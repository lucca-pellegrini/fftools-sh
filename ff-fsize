#!/usr/bin/env sh
# Reduces file to specified size

params="$(getopt                                                           \
	-o v:,a:,s:,p:,b:,V,x                                              \
	-l video-codec:,audio-codec:,size:,preset:,bitrate:,audio-bitrate: \
	-l verbose,trace                                                   \
	-n "$0" -- "$@"
)"

case $? in
0)
	;;
127|126)
	echo "Make sure you have util-linux installed" >&2
	exit 1
	;;
*)
	exit 1
esac

eval set -- "$params"
set -e

unset BITRATE AB
VC='libx265'
AC='copy'
PRESET='medium'
SIZE='96000'

while true; do
	case "$1" in
	-v|--video-codec)
		VC="$2"
		shift 2
		;;
	-a|--audio-codec)
		AC="$2"
		shift 2
		;;
	-s|--size)
		SIZE="$2"
		shift 2
		;;
	-p|--preset)
		PRESET="$2"
		shift 2
		;;
	-b|--bitrate)
		BITRATE="$2"
		shift 2
		;;
	--audio-bitrate)
		AB="$2"
		shift 2
		;;
	-V|--verbose)
		VERBOSE=1
		shift
		;;
	-x|--trace)
		set -x
		shift
		;;
	--)
		shift
		break
		;;
	*)
		exit 1
	esac
done

INPUT="$1"
shift

if [ -f "$INPUT" ]; then
	INPUT=file:"$INPUT"
fi

DURATION="$(ffprobe \
	-i "$INPUT" -v quiet -show_entries format=duration -of csv="p=0")"
BITRATE="$(printf '8*%s/%s\n' "$SIZE" "$DURATION" | bc -l)"

if [ "$AB" ]; then
	BITRATE="$(printf '%s-%s\n' "$BITRATE" "$AB" | bc -l)"
else
	ab="$(ffprobe -i "$INPUT" -v quiet -select_streams a -show_entries \
		stream=bit_rate -of default=noprint_wrappers=1:nokey=1)"
	if [ "$ab" ]; then
		BITRATE="$(printf '%s-%s/1000\n' "$BITRATE" "$ab" | bc -l)"
	fi
fi

PASSLOGFILE="$(mktemp -up . -t ff-fsize.XXXXXXXXXX)"
trap 'rm "$PASSLOGFILE"-*.log*' EXIT INT TERM HUP

if [ "$VERBOSE" ]; then
	(
		printf '\n'
		printf 'Video bitrate: %sk\n' "$BITRATE"
		printf 'Audio bitrate: %s\n' "${AB:-$ab}"
		printf 'Video codec: %s\n' "$VC"
		printf 'Preset: %s\n' "$PRESET"
		printf 'Audio codec: %s\n' "$AC"
		printf 'Size: %sk\n' "$SIZE"
		printf '\n'
		printf 'Duration: %s\n' "$DURATION"
		printf 'Bitrate: %s\n' "$BITRATE"
		printf 'Pass log file: %s\n' "$PASSLOGFILE"
		printf '\n'
	) >&2
fi


ffmpeg -hide_banner -i "$INPUT"                     \
	-c:v "$VC" -b:v "${BITRATE}k"               \
	-an                                         \
	-preset "$PRESET"                           \
	-pass 1 -passlogfile "$PASSLOGFILE" -f null \
	/dev/null

if [ "$AC" != copy ]; then
	ABOPT="-b:a ${AB}k"
fi

ffmpeg -hide_banner -i "$INPUT"             \
	-c:v "$VC" -b:v "${BITRATE}k"       \
	-c:a "$AC" $ABOPT                   \
	-preset "$PRESET"                   \
	-pass 2 -passlogfile "$PASSLOGFILE" \
	"$@"
